{"remainingRequest":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/babel-loader/lib/index.js!/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue?vue&type=template&id=f60b23c2&scoped=true","dependencies":[{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue","mtime":1623669437932},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js","mtime":1623656198748},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/babel-loader/lib/index.js","mtime":1614038826175},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1623656204272},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js","mtime":1623656198748},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/index.js","mtime":1623656204272}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHZNb2RlbFNlbGVjdCBhcyBfdk1vZGVsU2VsZWN0LCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi1mNjBiMjNjMiIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtZjYwYjIzYzIiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGZvcjogIm5ld1R3b290Igp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJzdHJvbmciLCBudWxsLCAiTmV3IFR3b290IiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJjcmVhdGUtdHdvb3QtcGFuZWxfX3N1Ym1pdCIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJjcmVhdGUtdHdvb3QtdHlwZSIKfTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgibGFiZWwiLCB7CiAgZm9yOiAibmV3VHdvb3RUeXBlIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3Ryb25nIiwgbnVsbCwgIlR5cGU6ICIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJidXR0b24iLCBudWxsLCAiIFR3b290IEl0ISAiLCAtMQovKiBIT0lTVEVEICovCik7CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJmb3JtIiwgewogICAgY2xhc3M6IFsiY3JlYXRlLXR3b290LXBhbmVsIiwgewogICAgICAnLS1leGNlZWRlZCc6ICRzZXR1cC5uZXdUd29vdENoYXJDb3VudCA+IDE4MAogICAgfV0sCiAgICBvblN1Ym1pdDogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSBfd2l0aE1vZGlmaWVycyhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkc2V0dXAuY3JlYXRlTmV3VHdvb3QgJiYgJHNldHVwLmNyZWF0ZU5ld1R3b290LmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0sIFsicHJldmVudCJdKSkKICB9LCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIGFkZCB0aGUgY2xhc3MgZXhjZWVkZWQgd2hlbiB0aGF0IGNvbmRpdGlvbiBpcyBtZXQgIiksIF9jcmVhdGVWTm9kZSgibGFiZWwiLCBfaG9pc3RlZF8xLCBbX2hvaXN0ZWRfMiwgX2NyZWF0ZVRleHRWTm9kZSgiICgiICsgX3RvRGlzcGxheVN0cmluZygkc2V0dXAubmV3VHdvb3RDaGFyQ291bnQpICsgIi8xODApIiwgMQogIC8qIFRFWFQgKi8KICApXSksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInRleHRhcmVhIiwgewogICAgaWQ6ICJuZXdUd29vdCIsCiAgICByb3dzOiAiNCIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJHNldHVwLnN0YXRlLm5ld1R3b290Q29udGVudCA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRzZXR1cC5zdGF0ZS5uZXdUd29vdENvbnRlbnRdXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgW19ob2lzdGVkXzUsIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoInNlbGVjdCIsIHsKICAgIGlkOiAibmV3VHdvb3RUeXBlIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuc3RhdGUuc2VsZWN0ZWRUd29vdFR5cGUgPSAkZXZlbnQ7CiAgICB9KQogIH0sIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHNldHVwLnN0YXRlLnR3b290VHlwZXMsIGZ1bmN0aW9uIChvcHRpb24sIGluZGV4KSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soIm9wdGlvbiIsIHsKICAgICAgdmFsdWU6IG9wdGlvbi52YWx1ZSwKICAgICAga2V5OiBpbmRleAogICAgfSwgX3RvRGlzcGxheVN0cmluZyhvcHRpb24ubmFtZSksIDkKICAgIC8qIFRFWFQsIFBST1BTICovCiAgICAsIFsidmFsdWUiXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsU2VsZWN0LCAkc2V0dXAuc3RhdGUuc2VsZWN0ZWRUd29vdFR5cGVdXSldKSwgX2hvaXN0ZWRfNl0pXSwgMzQKICAvKiBDTEFTUywgSFlEUkFURV9FVkVOVFMgKi8KICApOwp9KTs="},{"version":3,"sources":["/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue"],"names":[],"mappings":";;;;;;;;AAEe,EAAA,GAAG,EAAC;;;8BAAW,YAAA,CAA0B,QAA1B,EAA0B,IAA1B,EAAQ,WAAR,EAAiB,CAAA;AAAA;AAAjB,C;;;AAGjB,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;8BACP,YAAA,CAAyD,OAAzD,EAAyD;AAAlD,EAAA,GAAG,EAAC;AAA8C,CAAzD,EAAyB,C,aAAC,YAAA,CAAuB,QAAvB,EAAuB,IAAvB,EAAQ,QAAR,CAAD,CAAzB,E;;AAAA,C;;8BAQJ,YAAA,CAES,QAFT,EAES,IAFT,EAAQ,aAAR,EAEA,CAAA;AAAA;AAFA,C;;;;;uBAdR,YAAA,CAkBO,MAlBP,EAkBO;AAlBD,IAAA,KAAK,EAAA,CAAC,oBAAD,EAAqB;AAAA,oBAA0D,MAAA,CAAA,iBAAA,GAAiB;AAA3E,KAArB,CAkBJ;AAlB2B,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,MAAA,CAAA,cAAA,IAAA,MAAA,CAAA,cAAA,OAAA,MAAA,YAAV;AAAA,KAAA,EAAwB,CAAA,SAAA,CAAxB,CAAA;AAkBjC,GAlBP,E,CAAsH,mBAAA,CAAA,qDAAA,C,EAClH,YAAA,CAAsF,OAAtF,EAAA,UAAA,EAAsF,CAAhE,UAAgE,E,iBAAtC,OAAE,gBAAA,CAAG,MAAA,CAAA,iBAAH,CAAF,GAAyB,O,EAAK;AAAA;GAAQ,CAAtF,C,kBACA,YAAA,CAAmE,UAAnE,EAAmE;AAAzD,IAAA,EAAE,EAAC,UAAsD;AAA3C,IAAA,IAAI,EAAC,GAAsC;;aAAzB,MAAA,CAAA,KAAA,CAAM,eAAN,GAAqB,M;;AAAI,GAAnE,E,IAAA,E;;AAAA,G,iBAA0C,MAAA,CAAA,KAAA,CAAM,e,KAEhD,YAAA,CAaM,KAbN,EAAA,UAAA,EAaM,CAZF,YAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANF,UAME,E,gBALF,YAAA,CAIS,QAJT,EAIS;AAJD,IAAA,EAAE,EAAC,cAIF;;aAJ0B,MAAA,CAAA,KAAA,CAAM,iBAAN,GAAuB,M;;AAIjD,GAJT,E,oBACI,YAAA,CAES,SAFT,EAES,IAFT,EAES,WAAA,CAF+C,MAAA,CAAA,KAAA,CAAM,UAErD,EAF+D,UAAlC,MAAkC,EAA1B,KAA0B,EAArB;yBAAnD,YAAA,CAES,QAFT,EAES;AAFA,MAAA,KAAK,EAAE,MAAM,CAAC,KAEd;AAFkE,MAAA,GAAG,EAAE;AAEvE,KAFT,E,iBACO,MAAM,CAAC,I,CADd,EACkB;AAAA;AADlB,MACkB,CAAA,OAAA,CADlB,C;GAES,CAFT,E;;AAAA,G,EADJ,E;;AAAA,G,mBAAmC,MAAA,CAAA,KAAA,CAAM,iB,GAKvC,CAPN,CAYE,EAHF,UAGE,CAbN,C,CAJJ,E;;AAAA,G","sourcesContent":["<template>\n    <form class=\"create-twoot-panel\" @submit.prevent=\"createNewTwoot\" :class=\"{ '--exceeded': newTwootCharCount > 180 }\"> <!-- add the class exceeded when that condition is met -->\n        <label for=\"newTwoot\"><strong>New Twoot</strong> ({{ newTwootCharCount }}/180)</label>\n        <textarea id=\"newTwoot\" rows=\"4\" v-model=\"state.newTwootContent\" />\n        \n        <div class=\"create-twoot-panel__submit\">\n            <div class=\"create-twoot-type\">\n                <label for=\"newTwootType\"><strong>Type: </strong></label>\n                <select id=\"newTwootType\" v-model=\"state.selectedTwootType\">\n                    <option :value=\"option.value\" v-for=\"(option, index) in state.twootTypes\" :key=\"index\">\n                        {{ option.name }}\n                    </option>\n                </select>\n            </div>\n\n            <button>\n                Twoot It!\n            </button>\n        </div>\n    </form>\n</template>\n\n<script>\nimport { reactive, computed } from 'vue';\n\nexport default {\n    name: \"CreateTwootPanel\",\n    setup(props, ctx) {\n        const state = reactive ({\n            newTwootContent: '',\n            selectedTwootType: 'instant',\n            twootTypes: [\n                {value: 'draft', name: 'Draft'},\n                {value: 'instant', name: 'Instant Twoot'}\n            ],\n        })\n\n        const newTwootCharCount = computed(() => state.newTwootContent.length)\n\n        function createNewTwoot() {\n            if(state.newTwootContent && state.selectedTwootType !== 'draft') {\n                ctx.emit('add-twoot', state.newTwootContent);\n                state.newTwootContent = '';\n            }\n        }\n\n        return {\n            state,\n            newTwootCharCount,\n            createNewTwoot\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.create-twoot-panel {\n    margin-top: 20px;\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n\n    textarea {\n        border: 1px solid #DFE3E8;\n        border-radius: 5px;\n        margin-bottom: 5px;\n    }\n\n    .create-twoot-panel__submit {\n        display: flex;\n        justify-content: space-between;\n\n        .create-twoot-type {\n            padding: 10px 0;\n        }\n\n        button {\n            padding: 5px 20px;\n            margin: auto 0;\n            border-radius: 5px;\n            border: none;\n            background-color: deeppink;\n            color: white;\n            font-weight: bold;\n        }\n    }\n\n    &.--exceeded {\n        color: red;\n        border-color: red;\n\n        .create-twoot-panel__submit {\n            button {\n                background-color: red;\n                color: white;\n            }\n        }\n    }\n}\n</style>"],"sourceRoot":""}]}