{"remainingRequest":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/babel-loader/lib/index.js!/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/UserProfile.vue?vue&type=template&id=6ef6ca5e","dependencies":[{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/UserProfile.vue","mtime":1623652588570},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJ1c2VyLXByb2ZpbGVfX3VzZXItcGFuZWwiCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAidXNlci1wcm9maWxlX191c2VybmFtZSIKfTsKdmFyIF9ob2lzdGVkXzQgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAidXNlci1wcm9maWxlX19hZG1pbi1iYWRnZSIKfTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAidXNlci1wcm9maWxlX19hZG1pbi1iYWRnZSIKfSwgIk5vdCBBZG1pbiIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAidXNlci1wcm9maWxlX19mb2xsb3dlci1jb3VudCIKfTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3Ryb25nIiwgbnVsbCwgIkZvbGxvd2VyczogIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzggPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJmb3JtIiwgewogIGNsYXNzOiAidXNlci1wcm9maWxlX19jcmVhdGUtdHdvb3QiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJsYWJlbCIsIHsKICBmb3I6ICJuZXdUd29vdCIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoInN0cm9uZyIsIG51bGwsICJOZXcgVHdvb3QiKV0pLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJ0ZXh0YXJlYSIsIHsKICBpZDogIm5ld1R3b290IiwKICByb3dzOiAiNCIKfSldLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfOSA9IHsKICBjbGFzczogInVzZXItcHJvZmlsZV9fdHdvb3RzLXdyYXBwZXIiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfVHdvb3RJdGVtID0gX3Jlc29sdmVDb21wb25lbnQoIlR3b290SXRlbSIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoImgxIiwgX2hvaXN0ZWRfMywgIkAiICsgX3RvRGlzcGxheVN0cmluZygkZGF0YS51c2VyLnVzZXJuYW1lKSwgMQogIC8qIFRFWFQgKi8KICApLCAkZGF0YS51c2VyLmlzQWRtaW4gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzQsICJBZG1pbiIpKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIHsKICAgIGtleTogMQogIH0sIFtfY3JlYXRlQ29tbWVudFZOb2RlKCIgd2lsbCBvbmx5IHNob3cgaWZBZG1pbiBpcyB0cnVlICIpLCBfaG9pc3RlZF81XSwgMjExMgogIC8qIFNUQUJMRV9GUkFHTUVOVCwgREVWX1JPT1RfRlJBR01FTlQgKi8KICApKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIHdpbGwgb25seSBzaG93IGlmQWRtaW4gaXMgZmFsc2UgIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNiwgW19ob2lzdGVkXzcsIF9jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZygkZGF0YS5mb2xsb3dlcnMpLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8YnV0dG9uIHYtb246Y2xpY2s9XCJmb2xsb3dVc2VyXCI+Rm9sbG93PC9idXR0b24+IFxuICAgIDxidXR0b24gQGNsaWNrPVwiZm9sbG93VXNlclwiPkZvbGxvdzwvYnV0dG9uPiAgdGhlc2UgdHdvIGxpbmVzIGFyZSB0aGUgc2FtZSEhICIpXSksIF9ob2lzdGVkXzhdKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF85LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnVzZXIudHdvb3RzLCBmdW5jdGlvbiAodHdvb3QpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X1R3b290SXRlbSwgewogICAgICBrZXk6IHR3b290LmlkLAogICAgICB1c2VybmFtZTogJGRhdGEudXNlci51c2VybmFtZSwKICAgICAgdHdvb3Q6IHR3b290LAogICAgICBvbkZhdjogJG9wdGlvbnMudG9nZ2xlRmF2CiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbInVzZXJuYW1lIiwgInR3b290IiwgIm9uRmF2Il0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSldKTsKfQ=="},{"version":3,"sources":["/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/UserProfile.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;AACJ,EAAA,KAAK,EAAC;;;AACL,EAAA,KAAK,EAAC;;;;AACL,EAAA,KAAK,EAAC;;;8BACX,YAAA,CAA6D,KAA7D,EAA6D;AAAxD,EAAA,KAAK,EAAC;AAAkD,CAA7D,EAA8C,WAA9C,EAAuD,CAAA;AAAA;AAAvD,C;;;AACO,EAAA,KAAK,EAAC;;;8BACT,YAAA,CAA4B,QAA5B,EAA4B,IAA5B,EAAQ,aAAR,EAAmB,CAAA;AAAA;AAAnB,C;;8BAIF,YAAA,CAGO,MAHP,EAGO;AAHD,EAAA,KAAK,EAAC;AAGL,CAHP,EAAwC,C,aACpC,YAAA,CAAwD,OAAxD,EAAwD;AAAjD,EAAA,GAAG,EAAC;AAA6C,CAAxD,EAAqB,C,aAAC,YAAA,CAA0B,QAA1B,EAA0B,IAA1B,EAAQ,WAAR,CAAD,CAArB,CADoC,E,aAEpC,YAAA,CAAkC,UAAlC,EAAkC;AAAxB,EAAA,EAAE,EAAC,UAAqB;AAAV,EAAA,IAAI,EAAC;AAAK,CAAlC,CAFoC,CAAxC,E;;AAAA,C;;;AAKG,EAAA,KAAK,EAAC;;;;;uBAff,YAAA,CAwBQ,KAxBR,EAAA,UAAA,EAwBQ,CAvBN,YAAA,CAaQ,KAbR,EAAA,UAAA,EAaQ,CAZN,YAAA,CAA4D,IAA5D,EAAA,UAAA,EAAmC,MAAC,gBAAA,CAAG,KAAA,CAAA,IAAA,CAAK,QAAR,CAApC,EAAoD;AAAA;AAApD,GAYM,EAXuC,KAAA,CAAA,IAAA,CAAK,O,kBAAlD,YAAA,CAAsE,KAAtE,EAAA,UAAA,EAA2D,OAA3D,C,mBACA,YAAA,CAA6D,SAA7D,EAA6D;AAAA,IAAA,GAAA,EAAA;AAAA,GAA7D,EAA6D,CADU,mBAAA,CAAA,kCAAA,CACV,EAA7D,UAA6D,CAA7D,E;;AAAA,G,CAUM,EAVwD,mBAAA,CAAA,mCAAA,CAUxD,EATJ,YAAA,CAIM,KAJN,EAAA,UAAA,EAIM,CAHJ,UAGI,E,kCAH2B,KAAA,CAAA,S,GAAS;AAAA;GAGpC,EAFV,mBAAA,CAAA,yIAAA,CAEU,CAJN,CASI,EAJJ,UAII,CAbR,CAuBM,EATJ,YAAA,CAQM,KARN,EAAA,UAAA,EAQM,E,kBAPJ,YAAA,CAME,SANF,EAME,IANF,EAME,WAAA,CALkB,KAAA,CAAA,IAAA,CAAK,MAKvB,EAL6B,UAApB,KAAoB,EAAf;yBADhB,YAAA,CAME,oBANF,EAME;AAJG,MAAA,GAAG,EAAE,KAAK,CAAC,EAId;AAHG,MAAA,QAAQ,EAAE,KAAA,CAAA,IAAA,CAAK,QAGlB;AAFG,MAAA,KAAK,EAAE,KAEV;AADG,MAAA,KAAG,EAAE,QAAA,CAAA;AACR,KANF,E,IAAA,E;;AAAA,M,8BAAA,C;GAME,CANF,E;;AAAA,GAOI,EARN,CASI,CAxBR,C","sourcesContent":["<template>\n  <div class='user-profile'>\n    <div class='user-profile__user-panel'>\n      <h1 class='user-profile__username'>@{{ user.username }}</h1> \n      <div class='user-profile__admin-badge' v-if=\"user.isAdmin\">Admin</div> <!-- will only show ifAdmin is true -->\n      <div class='user-profile__admin-badge' v-else>Not Admin</div> <!-- will only show ifAdmin is false -->\n        <div class='user-profile__follower-count'>\n          <strong>Followers: </strong>{{ followers }}\n    <!-- <button v-on:click=\"followUser\">Follow</button> \n    <button @click=\"followUser\">Follow</button>  these two lines are the same!! --> \n        </div>\n        <form class=\"user-profile__create-twoot\">\n            <label for=\"newTwoot\"><strong>New Twoot</strong></label>\n            <textarea id=\"newTwoot\" rows=\"4\"/>\n        </form>\n      </div>\n      <div class=\"user-profile__twoots-wrapper\">\n        <TwootItem \n            v-for=\"twoot in user.twoots\" \n            :key=\"twoot.id\" \n            :username=\"user.username\" \n            :twoot=\"twoot\" \n            @fav=\"toggleFav\" \n        />\n      </div>\n    </div>\n</template>\n\n<script>\nimport TwootItem from \"./TwootItem\";\n\nexport default {\n  name: 'UserProfile',\n  components: { TwootItem },\n  data() {\n    return {\n      followers: 0,\n      user: {\n        id: 1,\n        username: 'CodeTravelled',\n        firstName: 'Jo',\n        lastName: 'Dunham',\n        email: 'joDunham@email.com',\n        isAdmin: false,\n        twoots: [\n            { id: 1, content: \"Twotter is Amazing!\" },\n            { id: 2, content: \"Don't forget to follow @CodeTravelled!\" },\n            { id: 3, content: \"Jo is awesome!\" },\n            { id: 4, content: \"My kitties are adorbs <3\" }\n        ]\n      }\n    }\n  },\n  watch: { //watches something and runs every time it changes\n    followers(newFollowerCount, oldFollowerCount) { //give it the same name as what you are watching just to make it readable\n      if(oldFollowerCount < newFollowerCount) {\n        console.log(`${this.user.username} has gained a follower!`);\n      }\n    }\n  },\n  computed: {\n    fullName() {\n      return `${this.user.firstName} ${this.user.lastName}`;\n    }\n  },\n  methods: {\n    followUser() {\n      this.followers++;\n    },\n    toggleFav(id) {\n        console.log(`Favourited Twoot #${id}`);\n    }\n  },\n  \n  mounted() { //run every time component is loaded for the first time, or remounted, each time starts the first time. Lifecycle hook\n    this.followUser();\n  }\n}\n</script>\n\n<style>\n    .user-profile {\n        display: grid;\n        grid-template-columns: 1fr 3fr;\n        width: 100%;\n        padding: 50px 5%;\n    }\n\n    .user-profile__user-panel{\n        display: flex;\n        flex-direction: column;\n        margin-right: 50px;\n        padding: 20px;\n        background-color: white;\n        border-radius: 5px;\n        border: 1px solid #DFE3E8;\n    }\n\n    .user-profile__admin-badge {\n        background-color: rebeccapurple;\n        color: white;\n        border-radius: 5px;\n        margin-right: auto;\n        padding: 0 10px;\n        font-weight: bold;\n        margin-bottom: 20px;\n    }\n\n    h1 {\n        margin: 0;\n    }\n\n    .user-profile__twoots-wrapper {\n        display: grid;\n        grid-gap: 10px;\n    }\n\n    .user-profile__create-twoot {\n        padding-top: 20px;\n        display: flex;\n        flex-direction: column;\n    }\n</style>"],"sourceRoot":""}]}