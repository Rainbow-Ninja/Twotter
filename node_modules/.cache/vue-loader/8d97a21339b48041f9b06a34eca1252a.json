{"remainingRequest":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue?vue&type=style&index=0&id=f60b23c2&lang=scss&scoped=true","dependencies":[{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue","mtime":1623669437932},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/css-loader/dist/cjs.js","mtime":1614038826398},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1623656204272},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/postcss-loader/src/index.js","mtime":1608798446698},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/sass-loader/dist/cjs.js","mtime":1623656196440},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/cache-loader/dist/cjs.js","mtime":1623656198748},{"path":"/Users/rainbowninja/Desktop/code/Vue/twotter/node_modules/vue-loader-v16/dist/index.js","mtime":1623656204272}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jcmVhdGUtdHdvb3QtcGFuZWwgewogICAgbWFyZ2luLXRvcDogMjBweDsKICAgIHBhZGRpbmc6IDIwcHggMDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwoKICAgIHRleHRhcmVhIHsKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjREZFM0U4OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICB9CgogICAgLmNyZWF0ZS10d29vdC1wYW5lbF9fc3VibWl0IHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKCiAgICAgICAgLmNyZWF0ZS10d29vdC10eXBlIHsKICAgICAgICAgICAgcGFkZGluZzogMTBweCAwOwogICAgICAgIH0KCiAgICAgICAgYnV0dG9uIHsKICAgICAgICAgICAgcGFkZGluZzogNXB4IDIwcHg7CiAgICAgICAgICAgIG1hcmdpbjogYXV0byAwOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICAgICAgICAgIGJvcmRlcjogbm9uZTsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGVlcHBpbms7CiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgfQogICAgfQoKICAgICYuLS1leGNlZWRlZCB7CiAgICAgICAgY29sb3I6IHJlZDsKICAgICAgICBib3JkZXItY29sb3I6IHJlZDsKCiAgICAgICAgLmNyZWF0ZS10d29vdC1wYW5lbF9fc3VibWl0IHsKICAgICAgICAgICAgYnV0dG9uIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDsKICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue"],"names":[],"mappings":"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","file":"/Users/rainbowninja/Desktop/code/Vue/twotter/src/components/CreateTwootPanel.vue","sourceRoot":"","sourcesContent":["<template>\n    <form class=\"create-twoot-panel\" @submit.prevent=\"createNewTwoot\" :class=\"{ '--exceeded': newTwootCharCount > 180 }\"> <!-- add the class exceeded when that condition is met -->\n        <label for=\"newTwoot\"><strong>New Twoot</strong> ({{ newTwootCharCount }}/180)</label>\n        <textarea id=\"newTwoot\" rows=\"4\" v-model=\"state.newTwootContent\" />\n        \n        <div class=\"create-twoot-panel__submit\">\n            <div class=\"create-twoot-type\">\n                <label for=\"newTwootType\"><strong>Type: </strong></label>\n                <select id=\"newTwootType\" v-model=\"state.selectedTwootType\">\n                    <option :value=\"option.value\" v-for=\"(option, index) in state.twootTypes\" :key=\"index\">\n                        {{ option.name }}\n                    </option>\n                </select>\n            </div>\n\n            <button>\n                Twoot It!\n            </button>\n        </div>\n    </form>\n</template>\n\n<script>\nimport { reactive, computed } from 'vue';\n\nexport default {\n    name: \"CreateTwootPanel\",\n    setup(props, ctx) {\n        const state = reactive ({\n            newTwootContent: '',\n            selectedTwootType: 'instant',\n            twootTypes: [\n                {value: 'draft', name: 'Draft'},\n                {value: 'instant', name: 'Instant Twoot'}\n            ],\n        })\n\n        const newTwootCharCount = computed(() => state.newTwootContent.length)\n\n        function createNewTwoot() {\n            if(state.newTwootContent && state.selectedTwootType !== 'draft') {\n                ctx.emit('add-twoot', state.newTwootContent);\n                state.newTwootContent = '';\n            }\n        }\n\n        return {\n            state,\n            newTwootCharCount,\n            createNewTwoot\n        }\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.create-twoot-panel {\n    margin-top: 20px;\n    padding: 20px 0;\n    display: flex;\n    flex-direction: column;\n\n    textarea {\n        border: 1px solid #DFE3E8;\n        border-radius: 5px;\n        margin-bottom: 5px;\n    }\n\n    .create-twoot-panel__submit {\n        display: flex;\n        justify-content: space-between;\n\n        .create-twoot-type {\n            padding: 10px 0;\n        }\n\n        button {\n            padding: 5px 20px;\n            margin: auto 0;\n            border-radius: 5px;\n            border: none;\n            background-color: deeppink;\n            color: white;\n            font-weight: bold;\n        }\n    }\n\n    &.--exceeded {\n        color: red;\n        border-color: red;\n\n        .create-twoot-panel__submit {\n            button {\n                background-color: red;\n                color: white;\n            }\n        }\n    }\n}\n</style>"]}]}